@page
@model MiniatureWebApp.Pages.Inspections.IndexModel

@{
    ViewData["Title"] = "Inspections";
    
    //Filter by Status
    List<SelectListItem> inspectionStatus = new List<SelectListItem>();
    inspectionStatus.Add(new SelectListItem() { Text = "PASS", Value = "PASS" });
    inspectionStatus.Add(new SelectListItem() { Text = "FAIL", Value = "FAIL" });
    inspectionStatus.Add(new SelectListItem() { Text = "SCHEDULE", Value = "SCHEDULE" });
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Bootstrap 101 Template</title>

    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css" integrity="sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu" crossorigin="anonymous">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js"></script>
    <![endif]-->
</head>

<script type="text/javascript" src="~/js/filter.js"></script>

<h1>Inspections</h1>

<p>
    <a button type="button" class="btn btn-success" asp-page="Create">New Inspection</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                <a onclick="DateSort()">@Html.DisplayNameFor(model => model.Inspections[0].Date)</a>
            </th>
            <th>
                <div>
                    @Html.DropDownList("Power Stations Filter", ViewBag.PowerStationSelectList as SelectList, "All")
                </div>                
                <div>
                    <a onclick="PowerStationSort()">Power Station</a>
                </div>
            </th>
            <th>
                <div>
                    @Html.DropDownList("Inspector Name Filter", ViewBag.InspectorNameList as SelectList, "All")
                </div>
                <div>
                    @Html.DisplayNameFor(model => model.Inspections[0].InspectorName)                
                </div>
            </th>
            <th>
                <div>
                    @Html.DropDownList("Status Filter", inspectionStatus, "All")
                </div>
                <div>
                    @Html.DisplayNameFor(model => model.Inspections[0].Status)                
                </div>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Inspections[0].Comment)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Inspections) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PowerStation.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InspectorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
            
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


@{
    if (!string.IsNullOrEmpty(ViewData["selectedPowerStationNameFilter"] as string)) {
        <script>
            document.getElementById("Power_Stations_Filter").value = "@ViewData["selectedPowerStationNameFilter"].ToString()";
        </script>
    }

    if (!string.IsNullOrEmpty(ViewData["selectedInspectorNameFilter"] as string)) {
        <script>
            document.getElementById("Inspector_Name_Filter").value = "@ViewData["selectedInspectorNameFilter"].ToString()";
        </script>
    }
}

<script>       
    document.getElementById("Power_Stations_Filter").onchange = PowerStationFilter;
    document.getElementById("Inspector_Name_Filter").onchange = InspectorNameFilter;
    document.getElementById("Status_Filter").onchange = StatusFilter;
</script>
