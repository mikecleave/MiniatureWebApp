@page
@model MiniatureWebApp.Pages.Inspections.IndexModel

@{
    ViewData["Title"] = "Inspections";
    
    //Filter by Status
    List<SelectListItem> inspectionStatus = new List<SelectListItem>();
    inspectionStatus.Add(new SelectListItem() { Text = "PASS", Value = "PASS" });
    inspectionStatus.Add(new SelectListItem() { Text = "FAIL", Value = "FAIL" });
    inspectionStatus.Add(new SelectListItem() { Text = "SCHEDULE", Value = "SCHEDULE" });
}

<h1>Inspections</h1> 
<p>
    <a asp-page="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort">
                    @Html.DisplayNameFor(model => model.Inspections[0].Date)
                </a>
            </th>
            <th>
                <!--
                <select id="Selector">
                    <option value="white">White</option>
                    <option value="red">Red</option>
                    <option value="blue">Blue</option>
                </Select>
                -->
                @Html.DropDownList("Power Stations Filter", ViewBag.PowerStationSelectList as SelectList, "All")
                
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort">
                    @Html.DisplayNameFor(model => model.Inspections[0].PowerStation)
                </a>                
            </th>
            <th>
                @Html.DropDownList("Inspector Name Filter", ViewBag.InspectorNameList as SelectList, "All")
                @Html.DisplayNameFor(model => model.Inspections[0].InspectorName)                
            </th>
            <th>
                @Html.DropDownList("Status Filter", inspectionStatus, "All")
                @Html.DisplayNameFor(model => model.Inspections[0].Status)                
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Inspections[0].Comment)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Inspections) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PowerStation.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InspectorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
            
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


@if (!string.IsNullOrEmpty(ViewData["selectedPowerStationIdFilter"] as string))
{
    <script>
        document.getElementById("Power_Stations_Filter").value = @ViewData["selectedPowerStationIdFilter"];
    </script>
}


<script type = "text/javascript" src="~/js/filter.js"></script>                  
<script>   
    document.getElementById("Power_Stations_Filter").onchange = PowerStationFilter;
    document.getElementById("Inspector_Name_Filter").onchange = InspectorNameFilter;
    document.getElementById("Status_Filter").onchange = StatusFilter;
</script>
